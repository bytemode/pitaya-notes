// Code generated by protoc-gen-go. DO NOT EDIT.
// source: arg.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Arg struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Arg) Reset()         { *m = Arg{} }
func (m *Arg) String() string { return proto.CompactTextString(m) }
func (*Arg) ProtoMessage()    {}
func (*Arg) Descriptor() ([]byte, []int) {
	return fileDescriptor_arg_e1b1c8888ddf9d6e, []int{0}
}
func (m *Arg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Arg.Unmarshal(m, b)
}
func (m *Arg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Arg.Marshal(b, m, deterministic)
}
func (dst *Arg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Arg.Merge(dst, src)
}
func (m *Arg) XXX_Size() int {
	return xxx_messageInfo_Arg.Size(m)
}
func (m *Arg) XXX_DiscardUnknown() {
	xxx_messageInfo_Arg.DiscardUnknown(m)
}

var xxx_messageInfo_Arg proto.InternalMessageInfo

func (m *Arg) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Arg)(nil), "protos.Arg")
}

func init() { proto.RegisterFile("arg.proto", fileDescriptor_arg_e1b1c8888ddf9d6e) }

var fileDescriptor_arg_e1b1c8888ddf9d6e = []byte{
	// 66 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0x4a, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0xe2, 0x5c, 0xcc, 0x8e, 0x45,
	0xe9, 0x42, 0x02, 0x5c, 0xcc, 0xb9, 0xc5, 0xe9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20,
	0x66, 0x12, 0x44, 0x81, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x57, 0x6c, 0xa7, 0xb1, 0x34, 0x00,
	0x00, 0x00,
}
